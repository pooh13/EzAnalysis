# LIFF
if event.message.text == 'LIFF':
    liff_id = '1655797178-OAZa4b85'
    line_bot_api.reply_message(event.reply_token, TextSendMessage(text='https://liff.line.me/'+liff_id))

elif 'https://' in event.message.text:
    # 丟https://網址 轉換成 https://liff.line.me/
    liff_id = liff_api.add(view_type="tall", view_url=event.message.text)
    message=[]
    message.append(TextSendMessage(text='https://liff.line.me/'+liff_id))
    line_bot_api.reply_message(event.reply_token, message)

# 回覆圖片 ImageSendMessage --ok
if isinstance(event, MessageEvent):
    find_pic = {'tbm': 'isch', 'q': event.message.text}
    url = f"https://www.google.com/search?{urllib.parse.urlencode(find_pic)}"
    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36'}

    req = urllib.request.Request(url, headers=headers)
    conn = urllib.request.urlopen(req)
    data = conn.read()

    pattern = 'img data-src="\S*"'
    img_list = []

    for match in re.finditer(pattern, str(data)):
        img_list.append(match.group()[14:-3])

    random_img_url = img_list[random.randint(0, len(img_list)+1)]
    print(random_img_url)

    line_bot_api.reply_message(
        event.reply_token,
        ImageSendMessage(original_content_url = random_img_url,
                         preview_image_url = random_img_url))


# 回覆相同文字 TextSendMessage --ok
if isinstance(event, MessageEvent): # 如果有訊息事件
    line_bot_api.reply_message(
        event.reply_token,
        TextSendMessage(text=event.message.text) # 回復傳入的訊息文字
    )

# 回覆貼圖 StickerSendMessage --ok
if isinstance(event, MessageEvent):
    line_bot_api.reply_message(
        event.reply_token,
        StickerSendMessage(package_id=11539, sticker_id=52114122)
    )



# Imagemap message
if event.message.text == "圖片":
    line_bot_api.reply_message(event.replytoken, ImageSendMessage(
        type = 'imagemap',
        baseUrl = 'https://github.com/line/line-bot-sdk-nodejs/raw/master/examples/kitchensink/static/rich',
        altText = 'Imagemap alt text',
    ))


# line接收照片
elif isinstance(event.message, ImageMessage):
        print("success")

        # 接收照片
        message_content = line_bot_api.get_message_content(event.message.id)
        with tempfile.NamedTemporaryFile(dir='media/images/', prefix=event.source.user_id + '-', delete=False) as file:
            for chunk in message_content.iter_content():
                file.write(chunk)

        line_bot_api.reply_message(
            event.reply_token,
            TextSendMessage(text="成功上傳照片")
        )
